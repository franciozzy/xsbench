#!/bin/bash
#
#  Copyright 2014 (c) Citrix
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, version only.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#########
## VMs Configuration
#####

# This indicate the name of the Linux VM to use
# NOTE: This must be the name of a working Linux VM
vm0="wheezy64"

# This indicates the format string for VM clones
vmf="${vm0}-%03d"

# This indicates how many VMs to use for benchmarking
vms=10

# This indicates the index of the first VM to use for benchmarking
vmi=1

#########
## SRs Configuration
#####

#nfs_name[0]="NFS name"
#nfs_serv[0]="127.0.0.1"
#nfs_path[0]="/nfs_path"

nfs_count=0

#lvm_bdev[0]="/dev/sdx"
#lvm_name[0]="LVM - sdx"

lvm_count=0

# This indicates which backends to use
# NOTE: The below can be 'lvm', 'nfs' or 'all'
storage=lvm

#########
## Benchmark Configuration
#####

# This is basename for the vms benchmark data files
data_base_vms="$(hostname)-${vm0}-$(xl list | awk '/^Domain-0/ {print $4}')-disklist"

# This is basename for the dom0 benchmark data files
data_base_dom0="$(hostname)-dom0-$(xl list | awk '/^Domain-0/ {print $4}')-disklist"

# This indicates the block sizes to benchmark (in bytes)
data_blkszs="512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304"

# This indicates how many seconds to run each benchmark for
data_iters=10

# This indicates which operations to run
# NOTE: The below can be 'r', 'w', or 'r w'
data_ops="r w"

# This indicates where to store raw data from benchmarks
data_raw="./data_raw"

# This indicates where to store processed benchamrk data
data_proc="./data"

# This indicates a data file containing the names of each test run
data_runs="./xsbench.runs"

#########
## System Configuration
#####

# This indicates the verbosity level
# 0 - Quiet: shows only fatal errors
# 1 - Minimal: prints main actions
# 2 - Verbose: prints details on actions
# 3 - Debug: prints extra information
verbose=3

# This indicates the master synexec repo
synexec_repo="https://github.com/franciozzy/synexec/archive/master.zip"

# This indicates the path to synexec_master
# NOTE: The suite will download and compile synexec if a binary does not exist
synexec_master="/root/xsbench/synexec_master"

# This indicates the session ID to use with synexec
# NOTE: Sessions are used for the master to identify its slaves.
#       Use different IDs on different hosts in the same network.
synexec_session=12345

# This indicates the master latency repo
latency_repo="https://github.com/franciozzy/latency/archive/master.zip"

# This indicates the path to latency
# NOTE: The suite will download and compile latency if a binary does not exist
latency="/root/xsbench/latency"

# Basename for the xsbench SSH key
# NOTE: The suite will create a key pair if it does not exist
xsbench_key="/root/.ssh/xsbench"

# This flag indicates whether to use 'fio' instead of 'latency'.
using_fio=1

# This indicates the master 'fio' repo
fio_repo="https://github.com/axboe/fio/archive/master.zip"

# This indicates the path to 'fio'
# NOTE: The suite will download and compile 'fio' if a binary does not exist
fio_path="/root/xsbench/fio"
